#port
server.port=${PORT:5432}
#Database
spring.datasource.url=${JDBC_DATABASE_URL:postgres://ec2-54-146-142-58.compute-1.amazonaws.com:5432/d4km4vdusbg796}
spring.datasource.username=${JDBC_DATABASE_USERNAME:hyqdgjgvdjhswi}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:9e030978c0dae5ab2cf07232538e34da13b6a18b4c4f9551fca932a1b1e201f4}
spring.datasource.driver-class-name=${JDBC_DATABASE_DRIVER:org.postgresql.Driver}
#Hibernate
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQL9Dialect}
spring.jpa.properties.hibernate.id.new_generator_mappings = true
spring.jpa.properties.hibernate.show.sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.hb2dll.auto = update
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#i18n
spring.messages.encoding=UTF-8
#thymeleaf
spring.thymeleaf.encoding=utf-8
server.tomcat.uri-encoding=UTF-8
spring.thymeleaf.mode=HTML5
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.cache=false
spring.thymeleaf.suffix=.html
spring.thymeleaf.content-type=text/html # ;charset=<encoding> is added

#upload
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
upload.path=C:/Users/admin/Desktop/case_study_module_4/src/main/resources/static/fileupload/
spring.resources.static-locations=file:${upload.path}, classpath:/static/
spring.mvc.static-path-pattern=/**
# Queries for AuthenticationManagerBuilder
spring.queries.users-query=select username, password, active from user where username=?
spring.queries.roles-query=select u.username, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?
# Admin username and password
spring.admin.username=admin
spring.admin.password=admin

